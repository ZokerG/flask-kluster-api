name: Deploy to GKE (Alternative)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  PROJECT_ID: second-kite-460800-d3
  GKE_CLUSTER: flask-cluster
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: flask-api-autopilot
  IMAGE: flask-kluster-api

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        install_components: 'gke-gcloud-auth-plugin'

    - name: 'Configure Docker to use gcloud as a credential helper'
      run: |-
        gcloud auth configure-docker

    - name: Build Docker image
      run: |-
        docker build -t "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" .

    - name: Publish Docker image
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    - name: 'Get GKE Credentials'
      uses: 'google-github-actions/get-gke-credentials@v2'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Deploy to GKE
      run: |-
        # Replace image in deployment
        sed -i "s|gcr.io/second-kite-460800-d3/flask-kluster-api:latest|gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA|g" k8s/deployment-autopilot.yaml
        
        # Apply configurations
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/deployment-autopilot.yaml
        kubectl apply -f k8s/loadbalancer.yaml
        
        # Verify deployment
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
